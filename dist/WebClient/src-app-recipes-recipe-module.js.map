{"version":3,"sources":["./src/app/recipes/edit-recipe/edit-recipe.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-search/recipe-search.component.html","./src/app/recipes/recipe/recipe.component.html","./src/app/recipes/edit-recipe/edit-recipe.component.scss","./src/app/recipes/edit-recipe/edit-recipe.component.ts","./src/app/recipes/edit-recipe/submitted.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.scss","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-list/recipe-list.component.scss","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-routing.module.ts","./src/app/recipes/recipe-search/recipe-search.component.scss","./src/app/recipes/recipe-search/recipe-search.component.ts","./src/app/recipes/recipe.module.ts","./src/app/recipes/recipe/recipe.component.scss","./src/app/recipes/recipe/recipe.component.ts"],"names":[],"mappings":"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","file":"src-app-recipes-recipe-module.js","sourcesContent":["export default \"<main role=\\\"main\\\">\\n\\n    <!-- <div class=\\\"container\\\" style=\\\"padding-bottom: 30px\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"well well-lg\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 text-center\\\">\\n               <h1>- {{pageTitle}} -</h1>\\n               <h1 *ngIf=\\\"recipe\\\">{{recipe.title}}</h1>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <hr>\\n    </div> -->\\n\\n    <div *ngIf=\\\"recipe\\\" class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n          <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-header text-center\\\">\\n              <h3 *ngIf=\\\"recipe.title\\\">Edit Recipe <br> <span style=\\\"font-style: italic\\\">{{recipe.title}}</span></h3>\\n              <h3 *ngIf=\\\"!recipe.title\\\">Create New Recipe</h3>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n\\n              <form novalidate  (ngSubmit)=\\\"saveForm()\\\" [formGroup]=\\\"recipeForm\\\">\\n\\n                <div class=\\\"form-group\\\">\\n\\n                  <div class=\\\"row form-row\\\">\\n\\n                    <div class=\\\"col-md-2\\\"></div>\\n\\n                    <div style=\\\"justify-content: center\\\" class=\\\"col-md-3 text-center input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Producer:</span>\\n                      </div>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"producer\\\" id=\\\"producerId\\\"\\n                                [ngClass]=\\\"{'is-invalid': (recipeForm.get('producer').touched || recipeForm.get('producer').dirty)\\n                                                          && !recipeForm.get('producer').valid }\\\" >\\n                          <option value=\\\"\\\" selected disabled hidden>Select Producer...</option>\\n                          <option value=\\\"Hello Fresh\\\">Hello Fresh</option>\\n                          <option value=\\\"Home Chef\\\">Home Chef</option>\\n                          <option value=\\\"Blue Apron\\\">Blue Apron</option>\\n                        </select>\\n                      <div *ngIf=\\\"recipeForm.get('producer').errors && recipeForm.get('producer').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                        <span>\\n                          Please select a producer.\\n                        </span>\\n                      </div>\\n                      <div *ngIf=\\\"recipeProducer === 'Blue Apron'\\\" class=\\\"form-check\\\">\\n                        <input (change)=\\\"changeBlueApronNutritionalFlag()\\\" [checked]=\\\"blueApronNutritionFlag\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"defaultCheck1\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"defaultCheck1\\\">\\n                          Provides Nutritional Info\\n                        </label>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-1\\\"></div>\\n\\n\\n                    <div class=\\\"col-md-6 input-group\\\">\\n\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Title:</span>\\n                      </div>\\n                        <input type=\\\"text\\\" id=\\\"titleId\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('title').touched || recipeForm.get('title').dirty) &&\\n                                                          !recipeForm.get('title').valid}\\\" >\\n                      <div *ngIf=\\\"recipeForm.get('title').errors && recipeForm.get('title').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                        <span>\\n                          Please enter a title.\\n                        </span>\\n                      </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"col-md-2\\\"></div> -->\\n\\n                  </div>\\n\\n                </div>\\n\\n                <hr>\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 text-center\\\">\\n                      <h3>Ingredients</h3>\\n                    </div>\\n                    <br>\\n                    <div formArrayName=\\\"ingredients\\\" *ngFor=\\\"let ingredient of ingredients.controls; let i = index\\\" class=\\\"col-md-12\\\">\\n                        <div [formGroupName]=\\\"i\\\" class=\\\"row\\\">\\n                          <div class=\\\"col-md-2\\\"></div>\\n                          <div class=\\\"col-md-4 text-right input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\">Ingredient {{i+1}}: </span>\\n                            </div>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"{{'ingredient' + i}}\\\" placeholder=\\\"Name of Ingredient\\\"\\n                                    [ngClass]=\\\"{'is-invalid': (ingredients.at(i).get('name').dirty || ingredients.at(i).get('name').touched)\\n                                                              && !ingredients.at(i).get('name').valid}\\\">\\n                            <div *ngIf=\\\"!ingredients.at(i).get('name').valid && ingredients.at(i).get('name').touched\\\" class=\\\"invalid-feedback text-center\\\">\\n                              <span>\\n                                Please enter an ingredient name.\\n                              </span>\\n                            </div>\\n                          </div>\\n                          <!-- <div class=\\\"col-md-1\\\"></div> -->\\n                          <div class=\\\"col-md-4 text-center input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\">Amount: </span>\\n                            </div>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amount\\\" id=\\\"{{'amount' + i}}\\\" placeholder=\\\"Amount of Ingredient\\\"\\n                                   [ngClass]=\\\"{'is-invalid': (ingredients.at(i).get('amount').dirty || ingredients.at(i).get('amount').touched)\\n                                                              && !ingredients.at(i).get('amount').valid}\\\">\\n                            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amountFor2\\\" id=\\\"{{'amount' + i}}\\\" placeholder=\\\"Amount of Ingredient\\\"\\n                                   [ngClass]=\\\"{'is-invalid': (ingredients.at(i).get('amountFor2').dirty || ingredients.at(i).get('amountFor2').touched)\\n                                                              && !ingredients.at(i).get('amountFor2').valid}\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"amountFor4\\\" id=\\\"{{'amount' + i}}\\\" placeholder=\\\"Amount of Ingredient\\\"\\n                                   [ngClass]=\\\"{'is-invalid': (ingredients.at(i).get('amountFor4').dirty || ingredients.at(i).get('amountFor4').touched)\\n                                                              && !ingredients.at(i).get('amountFor4').valid}\\\"> -->\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"removeIngredient(i)\\\">X</button>\\n                            <div *ngIf=\\\"!ingredients.at(i).get('amount').valid && ingredients.at(i).get('amount').touched\\\" class=\\\"invalid-feedback text-center\\\">\\n                              <span>\\n                                Please enter the ingredient amount.\\n                              </span>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col-md-2\\\"></div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\"\\n                          (click)=\\\"addIngredient()\\\" [disabled]=\\\"!ingredients.valid\\\">Add Ingredient</button>\\n                </div>\\n\\n                <hr>\\n\\n                <div *ngIf=\\\"recipeProducer === 'Hello Fresh' || recipeProducer === 'Home Chef'\\\" class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-md-12 text-center\\\">\\n                      <h3>{{preCookTitle}}</h3>\\n                    </div>\\n\\n                    <div formArrayName=\\\"preCook\\\" *ngFor=\\\"let item of preCook.controls; let i = index\\\" class=\\\"col-md-12\\\">\\n                      <div [formGroupName]=\\\"i\\\" class=\\\"row form-row\\\">\\n\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\">\\n                                <span *ngIf=\\\"recipeProducer === 'Hello Fresh'\\\">Bust Out #{{i + 1}}:</span>\\n                                <span *ngIf=\\\"recipeProducer === 'Home Chef'\\\">Step {{i + 1}}:</span>\\n                              </span>\\n                            </div>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"body\\\" id=\\\"{{'preCook' + i}}\\\"\\n                                   [ngClass]=\\\"{'is-invalid': (preCook.at(i).get('body').dirty || preCook.at(i).get('body').touched)\\n                                                              && !preCook.at(i).get('body').valid}\\\" >\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"removePreCook(i)\\\">X</button>\\n                            <div *ngIf=\\\"!preCook.at(i).get('body').valid && preCook.at(i).get('body').touched\\\" class=\\\"invalid-feedback text-center\\\">\\n                              <span>\\n                                Please enter the pre cooking instruction\\n                              </span>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div>\\n\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"recipeProducer === 'Hello Fresh' || recipeProducer === 'Home Chef'\\\" class=\\\"col-md-12 text-center\\\">\\n                  <button type=\\\"button\\\" [disabled]=\\\"!preCook.valid\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"addPreCook()\\\">\\n                    Add Precook <span *ngIf=\\\"recipeProducer === 'Hello Fresh'\\\">Bust Out</span> <span *ngIf=\\\"recipeProducer === 'Home Chef'\\\">Instruction</span>\\n                  </button>\\n                </div>\\n\\n                <hr *ngIf=\\\"recipeProducer === 'Hello Fresh' || recipeProducer === 'Home Chef'\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-md-12 text-center\\\">\\n                      <h3>Cooking Steps</h3>\\n                    </div>\\n\\n                    <div formArrayName=\\\"steps\\\" *ngFor=\\\"let step of steps.controls; let i = index\\\" class=\\\"col-md-12\\\">\\n                      <div [formGroupName]=\\\"i\\\" class=\\\"row form-row\\\">\\n\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\">Step {{i+1}} Name:</span>\\n                            </div>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\" id=\\\"{{'stepname' + i}}\\\"\\n                                   [ngClass]=\\\"{'is-invalid': (steps.at(i).get('name').dirty || steps.at(i).get('name').touched)\\n                                                              && !steps.at(i).get('name').valid}\\\" >\\n                            <div *ngIf=\\\"!steps.at(i).get('name').valid && steps.at(i).get('name').touched\\\" class=\\\"invalid-feedback text-center\\\">\\n                              <span>\\n                                Please enter a step name.\\n                              </span>\\n                            </div>\\n                          </div>\\n                          <!-- <label for=\\\"{{'stepname' + i}}\\\">Step {{i+1}} Name:</label> -->\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"removeStep(i)\\\">Remove Step {{i+1}}</button>\\n                        </div>\\n\\n                        <div class=\\\"col-md-12\\\">\\n                          <!-- <label for=\\\"{{'stepbody' + i}}\\\">Step {{i+1}} instructions:</label><br> -->\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\">Instructions:</span>\\n                            </div>\\n                            <textarea rows=\\\"2\\\" class=\\\"form-control\\\"\\n                                    formControlName=\\\"body\\\" id=\\\"{{'stepbody' + i}}\\\" placeholder=\\\"enter step {{i+1}} instructions here...\\\"\\n                                    [ngClass]=\\\"{'is-invalid': (steps.at(i).get('body').dirty || steps.at(i).get('body').touched)\\n                                                              && !steps.at(i).get('body').valid}\\\" ></textarea>\\n                            <div *ngIf=\\\"!steps.at(i).get('body').valid && steps.at(i).get('body').touched\\\" class=\\\"invalid-feedback text-center\\\">\\n                              <span>\\n                                Please enter a step description.\\n                              </span>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                      <br>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                  <button type=\\\"button\\\" [disabled]=\\\"!steps.valid\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"addStep()\\\">Add Step</button>\\n                </div>\\n\\n                <hr>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                   <h3>Nurtitional Information</h3>\\n                </div>\\n\\n                <div formGroupName=\\\"nutrition\\\">\\n                <!-- <div class=\\\"row\\\"> -->\\n\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-row\\\">\\n\\n                      <div *ngIf=\\\"recipeProducer !== 'Home Chef' && recipeProducer !== 'Hello Fresh' && (!recipeProducer || (recipeProducer === 'Blue Apron' && !blueApronNutritionFlag))\\\"\\n                          class=\\\"col-md-4\\\"></div>\\n                      <div [ngClass]=\\\"{'col-md-3': (recipeProducer === 'Home Chef' || recipeProducer === 'Hello Fresh' ||\\n                                      (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)),\\n                                       'col-md-4': (!recipeProducer || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag === false))}\\\"\\n                            class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Calories:</span>\\n                        </div>\\n                        <input formControlName=\\\"calories\\\" type=\\\"text\\\" id=\\\"caloriesId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.calories').dirty || recipeForm.get('nutrition.calories').touched)\\n                                                          && !recipeForm.get('nutrition.calories').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.calories').errors &&\\n                                    recipeForm.get('nutrition.calories').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a calorie amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.calories').errors &&\\n                                    recipeForm.get('nutrition.calories').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"recipeProducer !== 'Home Chef' && recipeProducer !== 'Hello Fresh' && (recipeProducer === 'Blue Apron' && !blueApronNutritionFlag)\\\"\\n                            class=\\\"col-md-4\\\"></div>\\n\\n                      <div *ngIf=\\\"recipeProducer === 'Home Chef' || recipeProducer === 'Hello Fresh' || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)\\\"\\n                          class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Fat:</span>\\n                        </div>\\n                        <input formControlName=\\\"fat\\\" type=\\\"text\\\" id=\\\"fatId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.fat').dirty || recipeForm.get('nutrition.fat').touched)\\n                                                          && !recipeForm.get('nutrition.fat').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.fat').errors &&\\n                                    recipeForm.get('nutrition.fat').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a fats amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.fat').errors &&\\n                                    recipeForm.get('nutrition.fat').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"recipeProducer === 'Home Chef' || recipeProducer === 'Hello Fresh' || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)\\\"\\n                          class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Carbs:</span>\\n                        </div>\\n                        <input formControlName=\\\"carbohydrate\\\" type=\\\"text\\\" id=\\\"carbsId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.carbohydrate').dirty || recipeForm.get('nutrition.carbohydrate').touched)\\n                                                          && !recipeForm.get('nutrition.carbohydrate').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.carbohydrate').errors &&\\n                                    recipeForm.get('nutrition.carbohydrate').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a carbs amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.carbohydrate').errors &&\\n                                    recipeForm.get('nutrition.carbohydrate').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"recipeProducer === 'Home Chef' || recipeProducer === 'Hello Fresh' || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)\\\"\\n                          class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Protein:</span>\\n                        </div>\\n                        <input formControlName=\\\"protein\\\" type=\\\"text\\\" id=\\\"proteinId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.protein').dirty || recipeForm.get('nutrition.protein').touched)\\n                                                          && !recipeForm.get('nutrition.protein').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.protein').errors &&\\n                                    recipeForm.get('nutrition.protein').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a protein amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.protein').errors &&\\n                                    recipeForm.get('nutrition.protein').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div *ngIf=\\\"recipeProducer === 'Hello Fresh' || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)\\\" class=\\\"form-group\\\">\\n                    <div class=\\\"form-row\\\">\\n\\n                      <div class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Sugar:</span>\\n                        </div>\\n                        <input formControlName=\\\"sugar\\\" type=\\\"text\\\" id=\\\"sugarId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.sugar').dirty || recipeForm.get('nutrition.sugar').touched)\\n                                                          && !recipeForm.get('nutrition.sugar').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.sugar').errors &&\\n                                    recipeForm.get('nutrition.sugar').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a sugar amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.sugar').errors &&\\n                                    recipeForm.get('nutrition.sugar').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Saturated Fat:</span>\\n                        </div>\\n                        <input formControlName=\\\"saturatedFat\\\" type=\\\"text\\\" id=\\\"satfatId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.saturatedFat').dirty || recipeForm.get('nutrition.saturatedFat').touched)\\n                                                          && !recipeForm.get('nutrition.saturatedFat').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.saturatedFat').errors &&\\n                                    recipeForm.get('nutrition.saturatedFat').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a saturated fats amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.saturatedFat').errors &&\\n                                    recipeForm.get('nutrition.saturatedFat').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Cholesterol:</span>\\n                        </div>\\n                        <input formControlName=\\\"cholesterol\\\" type=\\\"text\\\" id=\\\"cholId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.cholesterol').dirty || recipeForm.get('nutrition.cholesterol').touched)\\n                                                          && !recipeForm.get('nutrition.cholesterol').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.cholesterol').errors &&\\n                                    recipeForm.get('nutrition.cholesterol').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a cholesterol amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.cholesterol').errors &&\\n                                    recipeForm.get('nutrition.cholesterol').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Fiber:</span>\\n                        </div>\\n                        <input formControlName=\\\"fiber\\\" type=\\\"text\\\" id=\\\"fiberId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.fiber').dirty || recipeForm.get('nutrition.fiber').touched)\\n                                                          && !recipeForm.get('nutrition.fiber').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.fiber').errors &&\\n                                    recipeForm.get('nutrition.fiber').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a fiber amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.fiber').errors &&\\n                                    recipeForm.get('nutrition.fiber').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div *ngIf=\\\"recipeProducer === 'Home Chef' || recipeProducer === 'Hello Fresh' || (recipeProducer === 'Blue Apron' && blueApronNutritionFlag)\\\"\\n                        class=\\\"form-group\\\">\\n                    <div class=\\\"row form-row\\\">\\n\\n                      <div class=\\\"col-md-4\\\"></div>\\n                      <div class=\\\"col-md-3 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Sodium:</span>\\n                        </div>\\n                        <input formControlName=\\\"sodium\\\" type=\\\"text\\\" id=\\\"sodiumId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('nutrition.sodium').dirty || recipeForm.get('nutrition.sodium').touched)\\n                                                          && !recipeForm.get('nutrition.sodium').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.sodium').errors &&\\n                                    recipeForm.get('nutrition.sodium').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a sodium amount.\\n                          </span>\\n                        </div>\\n                        <div *ngIf=\\\"recipeForm.get('nutrition.sodium').errors &&\\n                                    recipeForm.get('nutrition.sodium').errors['numberType']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter a number.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-5\\\"></div>\\n\\n                    </div>\\n                  </div>\\n\\n              </div> <!-- end of nutrition form group div -->\\n\\n                  <hr>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"row form-row\\\">\\n\\n                      <div class=\\\"col-md-12 text-center\\\">\\n                        <h3>Image URL</h3>\\n                      </div>\\n\\n                      <div class=\\\"col-md-12 input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">Image URL:</span>\\n                        </div>\\n                        <input style=\\\"text-align: left !important\\\" formControlName=\\\"imgDir\\\" type=\\\"text\\\" id=\\\"imgId\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'is-invalid': (recipeForm.get('imgDir').dirty || recipeForm.get('imgDir').touched)\\n                                                          && !recipeForm.get('imgDir').valid}\\\" >\\n                        <div *ngIf=\\\"recipeForm.get('imgDir').errors &&\\n                                    recipeForm.get('imgDir').errors['required']\\\" class=\\\"invalid-feedback text-center\\\">\\n                          <span>\\n                            Please enter an image URL.\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\"></div>\\n                        <div class=\\\"col-md-4 text-center\\\">\\n                          <label *ngIf=\\\"imageDir\\\" style=\\\"font-style: italic\\\" for=\\\"imageId\\\">Image Preview</label>\\n                          <img *ngIf=\\\"imageDir\\\" style=\\\"width: 100%\\\" id=\\\"imageId\\\" src=\\\"{{imageDir}}\\\">\\n                        </div>\\n                        <div class=\\\"col-md-4\\\"></div>\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                <!-- </div> -->\\n\\n                <!-- <div class=\\\"form-group\\\">\\n                  <br>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                </div> -->\\n              </form>\\n\\n            </div><!-- end of card body -->\\n            <div class=\\\"card-footer text-right\\\">\\n              Form Valid: {{recipeForm.valid}}\\n              <button *ngIf=\\\"recipe.title\\\" type=\\\"button\\\"\\n                      class=\\\"btn btn-primary\\\" (click)=\\\"saveForm()\\\">Save Changes</button>\\n              <button *ngIf=\\\"!recipe.title\\\" type=\\\"button\\\"\\n                      class=\\\"btn btn-primary\\\" (click)=\\\"saveForm()\\\">Create</button>\\n            </div>\\n          </div> <!-- end of card -->\\n\\n        </div> <!-- end of first col-md-12 -->\\n      </div> <!-- end of first row -->\\n    </div> <!-- end of container -->\\n\\n</main>\\n\"","export default \"<main role=\\\"main\\\">\\n\\n  <br>\\n      <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"panel\\\">\\n                <div class=\\\"panel-body\\\">\\n                  <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header text-center\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-2\\\">\\n                          <div class=\\\"favoritingIcon pointable\\\">\\n                            <i class=\\\"fa\\\" aria-hidden=\\\"true\\\" (click)=\\\"favorite()\\\"\\n                            [ngClass]=\\\"{'fa-heart': favorited, 'fa-heart-o': !favorited}\\\"></i>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-md-8\\\"><h2>{{recipe.title}}</h2></div>\\n                        <div class=\\\"col-md-1\\\">\\n                          <app-star [rating]=\\\"avgRating\\\"></app-star>\\n                          <button type=\\\"button\\\" [id]=\\\"recipe._id\\\" class=\\\"btn btn-sm btn-warning\\\" data-toggle=\\\"modal\\\" data-target=\\\"#C580\\\">\\n                            <span style=\\\"color: white;\\\">Rate</span>\\n                          </button>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\"></div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n\\n                      <!-- Recipe Producer Badge -->\\n                      <div class=\\\"row text-center\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                          <h4><span [ngClass]=\\\"{'badge-success': recipe.producer === 'Hello Fresh' || recipe.producer === 'Home Chef',\\n                                                'badge-hf': recipe.producer === 'Hello Fresh',\\n                                                'badge-hc': recipe.producer === 'Home Chef',\\n                                                'badge-primary': recipe.producer === 'Blue Apron'}\\\" class=\\\"badge badge-pill\\\">{{recipe.producer}}</span></h4>\\n                        </div>\\n                      </div>\\n                      <br>\\n\\n                      <div class=\\\"row\\\">\\n                        <!-- Image -->\\n                        <div class=\\\"col-md-4\\\">\\n                          <img src=\\\"{{recipe.imgDir}}\\\">\\n                        </div>\\n\\n                        <!-- Ingredients -->\\n                        <div class=\\\"col-md-5\\\">\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-header text-center\\\">\\n                              <h4>Ingredients</h4>\\n                            </div>\\n                            <div class=\\\"card-body text-center\\\">\\n                              <p class=\\\"ing-text\\\" *ngFor=\\\"let ingredient of recipe.ingredients | ingredientsPipe\\\">\\n                                <span class=\\\"float-left\\\">{{ingredient[0]}}</span> <span class=\\\"float-right\\\">{{ingredient[1]}}</span><br>\\n                              </p>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <!-- Nutritional Information -->\\n                        <div class=\\\"col-md-3\\\">\\n                          <div class=\\\"card\\\">\\n                            <div class=\\\"card-header text-center\\\">\\n                              <h4>Nutritional Info</h4>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                              <p><span class=\\\"float-left\\\">Calories: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.calories}}</span></p>\\n                              <br *ngIf=\\\"recipe.producer === 'Hello Fresh' || recipe.producer === 'Home Chef' || (recipe.producer === 'Blue Apron' && recipe.nutritionValues.fat)\\\">\\n                              <p *ngIf=\\\"recipe.nutritionValues.fat\\\"><span class=\\\"float-left\\\">Fat: </span><span class=\\\"float-right\\\">{{recipe.nutritionValues.fat}}g</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.saturatedFat\\\">\\n                                <span class=\\\"float-left\\\">Saturated Fat: </span><span class=\\\"float-right\\\">{{recipe.nutritionValues.saturatedFat}}g</span><br>\\n                              </p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.carbohydrate\\\"><span class=\\\"float-left\\\">Carbs: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.carbohydrate}}g</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.sugar\\\"><span class=\\\"float-left\\\">Sugar: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.sugar}}g</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.fiber\\\"><span class=\\\"float-left\\\">Fiber: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.fiber}}g</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.protein\\\"><span class=\\\"float-left\\\">Protein: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.protein}}g</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.cholesterol\\\"><span class=\\\"float-left\\\">Cholesterol: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.cholesterol}}mg</span><br></p>\\n                              <p *ngIf=\\\"recipe.nutritionValues.sodium\\\"><span class=\\\"float-left\\\">Sodium: </span> <span class=\\\"float-right\\\">{{recipe.nutritionValues.sodium}}mg</span></p>\\n                            </div>\\n                            <div *ngIf=\\\"recipe.producer === 'Blue Apron' && !recipe.nutritionValues.fat\\\" class=\\\"card-footer text-center\\\">\\n                              <small>You can thank Blue Apron for not providing nutritional information!</small>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                      <hr>\\n\\n                      <!-- Precook -->\\n                      <div *ngIf=\\\"recipe.producer !== 'Blue Apron'\\\" class=\\\"card\\\">\\n                        <app-collapsible-well [title]=\\\"preCookTitle\\\">\\n                          <div well-title>\\n                            {{preCookTitle}}\\n                          </div>\\n                          <div well-body class=\\\"text-center\\\">\\n                            <ul *ngIf=\\\"recipe.producer === 'Home Chef'\\\" class=\\\"list-group list-group-flush\\\">\\n                              <li class=\\\"list-group-item\\\" *ngFor=\\\"let step of recipe.preCook\\\">{{step}}</li>\\n                            </ul>\\n                            <ul style=\\\"justify-content: center\\\" *ngIf=\\\"recipe.producer === 'Hello Fresh'\\\" class=\\\"list-group list-group-horizontal\\\">\\n                              <li class=\\\"list-group-item\\\" *ngFor=\\\"let step of recipe.preCook\\\">{{step}}</li>\\n                            </ul>\\n                          </div>\\n                        </app-collapsible-well>\\n\\n                      </div>\\n                      <br *ngIf=\\\"recipe.producer !== 'Blue Apron'\\\">\\n\\n                      <!-- Steps -->\\n                      <div class=\\\"card\\\">\\n\\n                        <app-collapsible-well title=\\\"'Steps'\\\">\\n                          <div well-title>\\n                            Steps\\n                          </div>\\n                          <div well-body>\\n                            <div *ngFor=\\\"let step of recipe.steps; let i = index\\\" class=\\\"row\\\">\\n\\n                              <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"card\\\">\\n                                  <app-collapsible-well [title]=\\\"step.name\\\">\\n                                    <div well-title>\\n                                      <span style=\\\"font-style: italic\\\">{{i+1}}: {{step.name}}</span>\\n                                    </div>\\n                                    <div well-body>\\n                                      <p>{{step.body}}</p>\\n                                    </div>\\n                                  </app-collapsible-well>\\n                                </div>\\n                                <br>\\n                              </div>\\n\\n                            </div>\\n                          </div>\\n                        </app-collapsible-well>\\n\\n                        <!-- <div class=\\\"card-header text-center\\\">\\n                          <h2>Steps</h2>\\n                        </div> -->\\n\\n                        <!-- <div class=\\\"card-body\\\">\\n\\n                          <div *ngFor=\\\"let step of recipe.steps; let i = index\\\" class=\\\"row\\\">\\n\\n                            <div class=\\\"col-md-12\\\">\\n                              <div class=\\\"card\\\">\\n                                <app-collapsible-well [title]=\\\"step.name\\\">\\n                                  <div well-title>\\n                                    <span style=\\\"font-style: italic\\\">{{i+1}}: {{step.name}}</span>\\n                                  </div>\\n                                  <div well-body>\\n                                    <p>{{step.body}}</p>\\n                                  </div>\\n                                </app-collapsible-well>\\n                              </div>\\n                              <br>\\n                            </div>\\n\\n                          </div>\\n\\n                        </div> -->\\n\\n                        </div>\\n\\n                      <!-- <div class=\\\"card\\\">\\n\\n                        <app-collapsible-well [title]=\\\"'Testing'\\\">\\n                          <div well-title>\\n                          <span style=\\\"font-style: italic\\\">6: Assemble and Serve</span>\\n                          </div>\\n                          <div well-body>\\n                              Divide beef mixture between tortillas. Spoon salse and crema over. Sprinkle with remaining cilantro. Serve with lime wedges on the side for squeezing over.\\n                          </div>\\n                        </app-collapsible-well>\\n\\n                      </div>\\n -->\\n                      <br>\\n                      <div class=\\\"col-md-12 text-center\\\">\\n                        <button class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\" [routerLink]=\\\"['/recipe/list']\\\">Back to all recipes</button>\\n                      </div>\\n                      <div *ngIf=\\\"userIsAdmin\\\" class=\\\"col-md-12 text-center\\\">\\n                        <br>\\n                        <button class=\\\"btn btn-outline-success\\\" type=\\\"button\\\" [routerLink]=\\\"['/recipe', this.recipeId, 'edit']\\\">Edit This Recipe</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- <div class=\\\"marketing\\\">\\n                    <div class=\\\"row\\\"  style=\\\"text-align: center\\\" >\\n                      <div class=\\\"col-lg-3\\\"></div>\\n                        <div class=\\\"col-lg-6\\\" style=\\\"padding-top: 20px\\\">\\n                          <a class=\\\"story-title\\\" href=\\\"#\\\"><img src=\\\"assets/images/pineapple-poblano-beef-tacos.jpg\\\" style=\\\"width:100px;height:100px\\\" class=\\\"img-circle\\\"></a>\\n                          <h3>{{recipe.title}}</h3>\\n                          <span class=\\\"badge badge-primary\\\">{{recipe.producer}} </span>\\n                          <br>\\n                          <p>Calories: {{recipe.nutritionValues.calories}}</p>\\n                        </div>\\n                        <div class=\\\"col-lg-3\\\"></div>\\n                      </div>\\n                  </div> -->\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      <!-- Modal -->\\n      <div style=\\\"justify-content: center\\\" class=\\\"modal fade\\\" id=\\\"C580\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n              <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header text-center\\\">\\n                  <h5 *ngIf=\\\"recipe\\\" class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><span style=\\\"font-style: italic; padding-left: 10px\\\">{{recipe.title}}</span></h5>\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                  </button>\\n                </div>\\n                <div class=\\\"modal-body text-center\\\">\\n                  <span (click)=\\\"setRating(1)\\\" [ngClass]=\\\"{'fa-star': userRating > 0, 'fa-star-o': userRating < 1}\\\" class=\\\"fa\\\"></span>\\n                  <span (click)=\\\"setRating(2)\\\" [ngClass]=\\\"{'fa-star': userRating > 1, 'fa-star-o': userRating < 2}\\\" class=\\\"fa\\\"></span>\\n                  <span (click)=\\\"setRating(3)\\\" [ngClass]=\\\"{'fa-star': userRating > 2, 'fa-star-o': userRating < 3}\\\" class=\\\"fa\\\"></span>\\n                  <span (click)=\\\"setRating(4)\\\" [ngClass]=\\\"{'fa-star': userRating > 3, 'fa-star-o': userRating < 4}\\\" class=\\\"fa\\\"></span>\\n                  <span (click)=\\\"setRating(5)\\\" [ngClass]=\\\"{'fa-star': userRating > 4, 'fa-star-o': userRating < 5}\\\" class=\\\"fa\\\"></span>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button> -->\\n                  <button type=\\\"button\\\" (click)=\\\"submitRate()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">\\n                    <span *ngIf=\\\"!rated\\\" >Rate!</span>\\n                    <span *ngIf=\\\"rated\\\" >Change Rate!</span>\\n                  </button>\\n                </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n</main>\\n\"","export default \"<main role=\\\"main\\\">\\n\\n  <div class=\\\"container\\\" style=\\\"padding-bottom: 30px\\\">\\n    <div class=\\\"row heading\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"well well-lg\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12 text-center\\\">\\n             <h1>All Recipes</h1>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 text-center\\\">\\n        <p>Sort By:</p>\\n        <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"btn toolbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"setSortFilter('rating')\\\"\\n                    [ngClass]=\\\"{'btn-dark': sortFilter !== 'rating', 'btn-light': sortFilter === 'rating'}\\\" >\\n              Rating&nbsp;<i *ngIf=\\\"sortFilter === 'rating'\\\" class=\\\"fa\\\"\\n                          [ngClass]=\\\"{'fa-sort-asc': sortDirection === 'up', 'fa-sort-desc': sortDirection === 'down'}\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setSortFilter('calories')\\\"\\n                    [ngClass]=\\\"{'btn-dark': sortFilter !== 'calories', 'btn-light': sortFilter === 'calories'}\\\">\\n              Calories&nbsp;<i *ngIf=\\\"sortFilter === 'calories'\\\" class=\\\"fa\\\"\\n                          [ngClass]=\\\"{'fa-sort-asc': sortDirection === 'up', 'fa-sort-desc': sortDirection === 'down'}\\\"></i>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setSortFilter('title')\\\"\\n                    [ngClass]=\\\"{'btn-dark': sortFilter !== 'title', 'btn-light': sortFilter === 'title'}\\\" >\\n              Title&nbsp;<i *ngIf=\\\"sortFilter === 'title'\\\" class=\\\"fa\\\"\\n                       [ngClass]=\\\"{'fa-sort-asc': sortDirection === 'up', 'fa-sort-desc': sortDirection === 'down'}\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\"></div>\\n      <div class=\\\"col-md-4 text-center\\\">\\n        <p>Filter By:</p>\\n        <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"btn toolbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"setTopFilter('new')\\\"\\n                    [ngClass]=\\\"{'btn-dark': topSelectedFilter !== 'new', 'btn-light': topSelectedFilter === 'new'}\\\" >New</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setTopFilter('hot')\\\"\\n                    [ngClass]=\\\"{'btn-dark': topSelectedFilter !== 'hot', 'btn-light': topSelectedFilter === 'hot'}\\\" >Hot</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setTopFilter('fav')\\\"\\n                    [ngClass]=\\\"{'btn-dark': topSelectedFilter !== 'fav', 'btn-light': topSelectedFilter === 'fav'}\\\" >Fav</button>\\n          </div>\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"setBotFilter('Hello Fresh')\\\"\\n                    [ngClass]=\\\"{'btn-dark': botSelectedFilter !== 'Hello Fresh', 'btn-light': botSelectedFilter === 'Hello Fresh'}\\\" >Hello Fresh</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setBotFilter('Home Chef')\\\"\\n                    [ngClass]=\\\"{'btn-dark': botSelectedFilter !== 'Home Chef', 'btn-light': botSelectedFilter === 'Home Chef'}\\\" >Home Chef</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"setBotFilter('Blue Apron')\\\"\\n                    [ngClass]=\\\"{'btn-dark': botSelectedFilter !== 'Blue Apron', 'btn-light': botSelectedFilter === 'Blue Apron'}\\\" >Blue Apron</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"panel\\\">\\n          <div class=\\\"panel-body\\\">\\n\\n            <div class=\\\"marketing\\\">\\n              <div class=\\\"row\\\"  style=\\\"text-align: center; align-content: center\\\" >\\n                <div *ngFor=\\\"let recipe of recipeList | filterBy:topSelectedFilter:botSelectedFilter:userId | orderBy:sortFilter:sortDirection \\\" class=\\\"col-md-4\\\" style=\\\"padding-top: 20px\\\">\\n                  <app-recipe (rateEvent)=\\\"triggerRate($event)\\\" (favoriteEvent)=\\\"favEvent($event)\\\" [userId]=\\\"userId\\\" [recipe]=\\\"recipe\\\" [userRating]=\\\"recipe.raters[userId]\\\"></app-recipe>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Modal -->\\n    <div style=\\\"justify-content: center\\\" class=\\\"modal fade\\\" id=\\\"C580\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header text-center\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><span style=\\\"font-style: italic; padding-left: 10px\\\">{{selectedRecipe.title}}</span></h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body text-center\\\">\\n            <span (click)=\\\"setRating(1)\\\" [ngClass]=\\\"{'fa-star': userRating > 0, 'fa-star-o': userRating < 1}\\\" class=\\\"fa\\\"></span>\\n            <span (click)=\\\"setRating(2)\\\" [ngClass]=\\\"{'fa-star': userRating > 1, 'fa-star-o': userRating < 2}\\\" class=\\\"fa\\\"></span>\\n            <span (click)=\\\"setRating(3)\\\" [ngClass]=\\\"{'fa-star': userRating > 2, 'fa-star-o': userRating < 3}\\\" class=\\\"fa\\\"></span>\\n            <span (click)=\\\"setRating(4)\\\" [ngClass]=\\\"{'fa-star': userRating > 3, 'fa-star-o': userRating < 4}\\\" class=\\\"fa\\\"></span>\\n            <span (click)=\\\"setRating(5)\\\" [ngClass]=\\\"{'fa-star': userRating > 4, 'fa-star-o': userRating < 5}\\\" class=\\\"fa\\\"></span>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"submitRate()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">\\n              <span *ngIf=\\\"!rated\\\" >Rate!</span>\\n              <span *ngIf=\\\"rated\\\" >Change Rate!</span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</main>\\n\"","export default \"<main role=\\\"main\\\">\\n\\n<div class=\\\"container\\\" style=\\\"padding-bottom: 30px\\\">\\n  <div class=\\\"row heading\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"well well-lg\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n           <h1>Search Results<br>\\n           <span style=\\\"font-style: italic\\\">'{{searchString}}'</span></h1>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"panel\\\">\\n          <div class=\\\"panel-body\\\">\\n\\n            <div class=\\\"marketing\\\">\\n              <div class=\\\"row\\\"  style=\\\"text-align: center; align-content: center\\\" >\\n                <div *ngFor=\\\"let recipe of filteredList\\\" class=\\\"col-lg-4\\\" style=\\\"padding-top: 20px\\\">\\n                  <app-recipe (rateEvent)=\\\"triggerRate($event)\\\" (favoriteEvent)=\\\"favEvent($event)\\\"\\n                              [userId]=\\\"userId\\\" [recipe]=\\\"recipe\\\" [userRating]=\\\"recipe.raters[userId]\\\"></app-recipe>\\n                </div>\\n                <div *ngIf=\\\"filteredList.length < 1\\\" class=\\\"col-lg-12\\\">\\n                  <h3 style=\\\"font-style: italic\\\">No Recipes Found</h3>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  <!-- Modal -->\\n  <div style=\\\"justify-content: center\\\" class=\\\"modal fade\\\" id=\\\"C580\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header text-center\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><span style=\\\"font-style: italic; padding-left: 10px\\\">{{selectedRecipe.title}}</span></h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body text-center\\\">\\n          <span (click)=\\\"setRating(1)\\\" [ngClass]=\\\"{'fa-star': userRating > 0, 'fa-star-o': userRating < 1}\\\" class=\\\"fa\\\"></span>\\n          <span (click)=\\\"setRating(2)\\\" [ngClass]=\\\"{'fa-star': userRating > 1, 'fa-star-o': userRating < 2}\\\" class=\\\"fa\\\"></span>\\n          <span (click)=\\\"setRating(3)\\\" [ngClass]=\\\"{'fa-star': userRating > 2, 'fa-star-o': userRating < 3}\\\" class=\\\"fa\\\"></span>\\n          <span (click)=\\\"setRating(4)\\\" [ngClass]=\\\"{'fa-star': userRating > 3, 'fa-star-o': userRating < 4}\\\" class=\\\"fa\\\"></span>\\n          <span (click)=\\\"setRating(5)\\\" [ngClass]=\\\"{'fa-star': userRating > 4, 'fa-star-o': userRating < 5}\\\" class=\\\"fa\\\"></span>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button> -->\\n          <button type=\\\"button\\\" (click)=\\\"submitRate()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"!rated\\\" >Rate!</span>\\n            <span *ngIf=\\\"rated\\\" >Change Rate!</span>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  </div>\\n\\n</main>\\n\"","export default \"<div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n  <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{recipe.imgDir}}\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 style=\\\"color: white\\\" class=\\\"card-title\\\">{{recipe.title}}</h5>\\n    <!-- <p class=\\\"card-text\\\">Some quick example text to build on the card title & the card's content.</p> -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <p style=\\\"font-size: 13px; color: white\\\">Calories: {{recipe.nutritionValues.calories}}</p>\\n        <p><span [ngClass]=\\\"{'badge-hf': recipe.producer === 'Hello Fresh',\\n                             'badge-hc': recipe.producer === 'Home Chef',\\n                             'badge-success': (recipe.producer === 'Hello Fresh' || recipe.producer === 'Home Chef'),\\n                             'badge-primary': recipe.producer === 'Blue Apron'}\\\"\\n            class=\\\"badge badge-pill\\\">{{recipe.producer}}</span></p>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    <!-- </div> -->\\n\\n    <!-- <div class=\\\"row\\\"> -->\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"favoritingIcon pointable\\\">\\n              <i class=\\\"fa\\\" aria-hidden=\\\"true\\\" (click)=\\\"favorite()\\\"\\n              [ngClass]=\\\"{'fa-heart': favorited, 'fa-heart-o': !favorited}\\\"></i>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <a [routerLink]=\\\"['/recipe', recipe._id]\\\" class=\\\"btn btn-info\\\">View Recipe &raquo;</a>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <!-- Overall -->\\n        <div style=\\\"padding-top: 6px; margin-left: -18px\\\">\\n          <app-star [rating]=\\\"avgRating\\\"></app-star>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 text-center\\\">\\n      </div>\\n      <div style=\\\"justify-content: center; margin-top: 6px\\\" class=\\\"col-md-4 text-center\\\">\\n        <button type=\\\"button\\\" [id]=\\\"recipe._id\\\" (click)=\\\"triggerRate()\\\" class=\\\"btn btn-sm btn-warning\\\" data-toggle=\\\"modal\\\" data-target=\\\"#C580\\\">\\n          <span style=\\\"color: white;\\\">Rate</span>\\n        </button>\\n      </div>\\n      <div class=\\\"col-md-4 text-center\\\">\\n      </div>\\n    </div>\\n\\n      <!-- Modal -->\\n<!--      <div style=\\\"justify-content: center\\\" class=\\\"modal fade\\\" [id]=\\\"modalContentID\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">-->\\n<!--        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">-->\\n<!--          <div class=\\\"modal-content\\\">-->\\n<!--            <div class=\\\"modal-header text-center\\\">-->\\n<!--              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><span style=\\\"font-style: italic; padding-left: 10px\\\">{{recipe.title}}</span></h5>-->\\n<!--              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">-->\\n<!--                <span aria-hidden=\\\"true\\\">&times;</span>-->\\n<!--              </button>-->\\n<!--            </div>-->\\n<!--            <div class=\\\"modal-body text-center\\\">-->\\n<!--              <span (click)=\\\"setRating(1)\\\" [ngClass]=\\\"{'fa-star': userRating > 0, 'fa-star-o': userRating < 1}\\\" class=\\\"fa\\\"></span>-->\\n<!--              <span (click)=\\\"setRating(2)\\\" [ngClass]=\\\"{'fa-star': userRating > 1, 'fa-star-o': userRating < 2}\\\" class=\\\"fa\\\"></span>-->\\n<!--              <span (click)=\\\"setRating(3)\\\" [ngClass]=\\\"{'fa-star': userRating > 2, 'fa-star-o': userRating < 3}\\\" class=\\\"fa\\\"></span>-->\\n<!--              <span (click)=\\\"setRating(4)\\\" [ngClass]=\\\"{'fa-star': userRating > 3, 'fa-star-o': userRating < 4}\\\" class=\\\"fa\\\"></span>-->\\n<!--              <span (click)=\\\"setRating(5)\\\" [ngClass]=\\\"{'fa-star': userRating > 4, 'fa-star-o': userRating < 5}\\\" class=\\\"fa\\\"></span>-->\\n<!--            </div>-->\\n<!--            <div class=\\\"modal-footer\\\">-->\\n<!--              &lt;!&ndash; <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button> &ndash;&gt;-->\\n<!--              <button type=\\\"button\\\" (click)=\\\"submitRate()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">-->\\n<!--                <span *ngIf=\\\"!rated\\\" >Rate!</span>-->\\n<!--                <span *ngIf=\\\"rated\\\" >Change Rate!</span>-->\\n<!--              </button>-->\\n<!--            </div>-->\\n<!--          </div>-->\\n<!--        </div>-->\\n<!--      </div>-->\\n\\n  </div>\\n</div>\\n\"","export default \"input {\\n  text-align: center; }\\n\\n.input-group {\\n  align-self: flex-start; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9oZGQvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcmVjaXBlLWFwcC1uZy9zcmMvYXBwL3JlY2lwZXMvZWRpdC1yZWNpcGUvZWRpdC1yZWNpcGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvZWRpdC1yZWNpcGUvZWRpdC1yZWNpcGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmlucHV0LWdyb3VwIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbn1cbiJdfQ== */\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder,\n  Validators, AbstractControl, ValidatorFn,\n  FormArray } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { RecipeApiService } from 'src/app/core/services/api/recipe-api.service';\nimport { IRecipe, IRecipeResolved } from 'src/app/models/recipe.model';\nimport { TOASTR_TOKEN, Toastr } from '../../core/services/toastr.service';\n\nfunction numberChecker(): ValidatorFn {\n\n  return (c: AbstractControl): { [key: string]: boolean} | null => {\n\n    const isNotNumber = isNaN(c.value);\n\n    if (c.dirty && isNotNumber && c.value !== '') {\n      return {numberType: true};\n    }\n\n    return null;\n  };\n}\n\n@Component({\n  selector: 'app-edit-recipe',\n  templateUrl: './edit-recipe.component.html',\n  styleUrls: ['./edit-recipe.component.scss']\n})\nexport class EditRecipeComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n  private producerSub: Subscription;\n  private imgUrlSub: Subscription;\n\n  recipeForm: FormGroup;\n  recipeProducer: string;\n  pageTitle: any;\n  preCookTitle: string;\n  id: any;\n  recipe: IRecipe;\n  imageDir: string;\n  submitted = false;\n  blueApronNutritionFlag = false;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private apiService: RecipeApiService,\n              @Inject(TOASTR_TOKEN) private toastr: Toastr,\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n    window.scroll(0, 0);\n    this.recipeForm = this.fb.group({\n      producer: ['', Validators.required],\n      title: ['', Validators.required],\n      ingredients: this.fb.array([]),\n      preCook: this.fb.array([]),\n      steps: this.fb.array([]),\n      nutrition: this.fb.group({\n        calories: ['', [Validators.required, numberChecker()]],\n        fat: ['', [Validators.required, numberChecker()]],\n        carbohydrate: ['', [Validators.required, numberChecker()]],\n        protein: ['', [Validators.required, numberChecker()]],\n        sugar: ['', [Validators.required, numberChecker()]],\n        saturatedFat: ['', [Validators.required, numberChecker()]],\n        cholesterol: ['', [Validators.required, numberChecker()]],\n        fiber: ['', [Validators.required, numberChecker()]],\n        sodium: ['', [Validators.required, numberChecker()]]\n      }),\n      imgDir: ['', Validators.required]\n    });\n\n    // console.log('right before watchProducer');\n    // this.watchProducer();\n    // this.watchImageUrl();\n\n    this.sub = this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      if (this.id === '0') {\n        this.pageTitle = 'Add Recipe';\n      } else {\n        this.pageTitle = 'Edit Recipe';\n      }\n      this.getRecipeInfo();\n    });\n\n\n  }\n\n  watchProducer(): void {\n    const producerControl = this.recipeForm.get('producer');\n    const nutritionControl = this.recipeForm.get('nutrition');\n\n    this.producerSub = producerControl.valueChanges.subscribe(value => {\n      if (value === 'Blue Apron') {\n        this.preCookTitle = '';\n        console.log('handling validation changes based upon BA selection');\n        this.removeHomeChefValidators(nutritionControl);\n        this.removeHelloFreshValidators(nutritionControl);\n\n        /* using the following loop to clear validators so if the user has entered precook stuff then switched to blue apron\n        the form will not clear the values in case they switch back but clear the validators so the form is valid. When the form\n        is submitted if the producer is blue apron then this comp will then clear the values so they don't get submitted to database */\n        let preCookCounter = 0;\n        while (preCookCounter < this.preCook.length) {\n          this.preCook.at(preCookCounter).get('body').clearValidators();\n          this.preCook.at(preCookCounter).get('body').updateValueAndValidity();\n          preCookCounter++;\n        }\n\n      } else if (value === 'Home Chef') {\n        // in the case of submitting blue apron originally then changing to home chef... might delete after reactivating submit function\n        // but also might keep if I create a modal window to confirm recipe and they choose no and go back to blue apron?\n        if (this.preCook.length === 0) {\n          this.preCook.push(this.buildPreCook());\n        }\n        this.preCookTitle = 'Before You Cook Instructions:';\n        this.addHomeChefValidators(nutritionControl);\n        this.removeHelloFreshValidators(nutritionControl);\n        this.reAddPreCookValidators();\n        console.log('handling validation changed based upon HC selection');\n      } else if (value === 'Hello Fresh') {\n        // in the case of submitting blue apron originally then changing to hello fresh... might delete after reactivating submit function\n        // but also might keep if I create a modal window to confirm recipe and they choose no and go back to blue apron?\n        if (this.preCook.length === 0) {\n          this.preCook.push(this.buildPreCook());\n        }\n        this.preCookTitle = 'What to Bust Out Before You Cook:';\n        this.addHomeChefValidators(nutritionControl);\n        this.addHelloFreshValidators(nutritionControl);\n        this.reAddPreCookValidators();\n        console.log('handling validation changes based upon HF selection');\n      } else {\n        console.log('in else clause');\n      }\n\n      console.log('Producer changed to: ' + value);\n      this.recipeProducer = value;\n    });\n  }\n\n  clearFormArray(formArray: FormArray): void {\n    while (formArray.length !== 0) {\n      formArray.removeAt(0);\n    }\n  }\n\n  reAddPreCookValidators(): void {\n    let counter = 0;\n    while (counter < this.preCook.length) {\n      this.preCook.at(counter).get('body').setValidators(Validators.required);\n      this.preCook.at(counter).get('body').updateValueAndValidity();\n      counter++;\n    }\n  }\n\n  watchImageUrl(): void {\n    const imageControl = this.recipeForm.get('imgDir');\n    this.imgUrlSub = imageControl.valueChanges.pipe(debounceTime(1000)).subscribe(value => {\n      this.imageDir = value;\n    });\n  }\n\n  get ingredients(): FormArray {\n    return this.recipeForm.get('ingredients') as FormArray;\n  }\n\n  get steps(): FormArray {\n    return this.recipeForm.get('steps') as FormArray;\n  }\n\n  get preCook(): FormArray {\n    return this.recipeForm.get('preCook') as FormArray;\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n    this.producerSub.unsubscribe();\n    this.imgUrlSub.unsubscribe();\n  }\n\n  changeBlueApronNutritionalFlag(): void {\n    this.blueApronNutritionFlag = !this.blueApronNutritionFlag;\n    const nutritionControl = this.recipeForm.get('nutrition');\n    if (!this.blueApronNutritionFlag) {\n      console.log('no BA nutritional info \\nRemoving validators...');\n      this.removeHelloFreshValidators(nutritionControl);\n      this.removeHomeChefValidators(nutritionControl);\n    } else {\n      console.log('BA nutritional info \\nAdding validators...');\n      this.addHelloFreshValidators(nutritionControl);\n      this.addHomeChefValidators(nutritionControl);\n    }\n  }\n\n  saveForm(): void {\n    if (!this.recipeForm.valid) {\n      console.log('trying to save invalid form');\n      this.markFormGroupTouched(this.recipeForm);\n      this.toastr.warning('Fix form field errors and try again.');\n      // console.log(this.recipeForm.controls);\n      return;\n    }\n\n    if (this.recipeProducer === 'Blue Apron') {\n      console.log('user submitting blue apron recipe. Clearing preCook array...');\n      this.clearFormArray(this.preCook);\n      if (!this.blueApronNutritionFlag) {\n        console.log('saving BA form that doesnt provide nutrition info');\n        const nutritionControl = this.recipeForm.get('nutrition');\n        nutritionControl.get('fat').patchValue('');\n        nutritionControl.get('carbohydrate').patchValue('');\n        nutritionControl.get('protein').patchValue('');\n        nutritionControl.get('sodium').patchValue('');\n        nutritionControl.get('sugar').patchValue('');\n        nutritionControl.get('saturatedFat').patchValue('');\n        nutritionControl.get('cholesterol').patchValue('');\n        nutritionControl.get('fiber').patchValue('');\n      }\n    }\n\n    if (this.recipeProducer === 'Home Chef' && this.recipeForm.get('nutrition.sugar').value !== '') {\n      const nutritionControl = this.recipeForm.get('nutrition');\n      nutritionControl.get('sugar').patchValue('');\n      nutritionControl.get('saturatedFat').patchValue('');\n      nutritionControl.get('cholesterol').patchValue('');\n      nutritionControl.get('fiber').patchValue('');\n    }\n\n    // console.log('recipe form value: ' + JSON.stringify(this.recipeForm.value));\n    // return;\n\n    let formRecipe: IRecipe;\n    formRecipe = this.recipeForm.value;\n    // formRecipe.nutritionValues = this.recipeForm.get('nutrition').value;\n\n\n    // user is adding new recipe\n    if (this.id === '0') {\n      formRecipe.favoriters = [];\n      formRecipe.raters = {} as Map<number, number>;\n      this.apiService.submitRecipeForApproval(formRecipe).subscribe(res => {\n        // console.log('response: ' + res.id);\n        this.submitted = true;\n        this.toastr.success('Recipe Submitted for Approval!');\n        this.router.navigate(['/recipe/submitted']);\n      }, err => {\n        this.toastr.error('Error submitting recipe. Check fields and try again');\n        console.log('ERROR CREATING RECIPE: ' + JSON.stringify(err));\n      });\n\n    } else { // user is editing current recipe\n\n      formRecipe._id = this.id;\n      formRecipe.favoriters = this.recipe.favoriters;\n      formRecipe.raters = this.recipe.raters;\n      this.apiService.updateRecipe(formRecipe).subscribe(res => {\n        console.log('res on updating: ' + res);\n        this.submitted = true;\n        this.toastr.success('Recipe Successfully Updated!');\n        this.router.navigate(['recipe', this.id]);\n      }, err => {\n        this.toastr.error('Error Updating Recipe');\n        console.log('ERROR UPDATING RECIPE: ' + JSON.stringify(err));\n      });\n\n    }\n\n  }\n\n\n  getRecipeInfo(): void {\n    if (this.id === '0') { // ading a recipe instead of editing one\n      this.recipeForm = this.fb.group({\n        producer: ['', Validators.required],\n        title: ['', Validators.required],\n        ingredients: this.fb.array([this.buildIngredient()]),\n        preCook: this.fb.array([this.buildPreCook()]),\n        steps: this.fb.array([this.buildStep()]),\n        nutrition: this.fb.group({\n          calories: ['', [Validators.required, numberChecker()]],\n          fat: ['', [Validators.required, numberChecker()]],\n          carbohydrate: ['', [Validators.required, numberChecker()]],\n          protein: ['', [Validators.required, numberChecker()]],\n          sugar: ['', [Validators.required, numberChecker()]],\n          saturatedFat: ['', [Validators.required, numberChecker()]],\n          cholesterol: ['', [Validators.required, numberChecker()]],\n          fiber: ['', [Validators.required, numberChecker()]],\n          sodium: ['', [Validators.required, numberChecker()]]\n        }),\n        imgDir: ['', Validators.required]\n      });\n\n      this.recipe = {} as IRecipe;\n      this.imageDir = '';\n      this.watchImageUrl();\n      this.watchProducer();\n    } else { // editing a recipe\n\n        const resolvedData: IRecipeResolved = this.route.snapshot.data.resolvedData;\n\n        if (resolvedData.error) {\n          console.error(`Error in edit recipe ${resolvedData.error}`);\n          this.router.navigate(['error']);\n        }\n\n        this.watchImageUrl();\n        this.watchProducer();\n\n        this.recipe = resolvedData.recipe;\n\n        if (this.ingredients) {\n          this.ingredients.reset();\n        }\n        if (this.steps) {\n          this.steps.reset();\n        }\n\n        this.blueApronNutritionFlag = (this.recipe.producer === 'Blue Apron' && !!this.recipe.nutritionValues.fat);\n\n        let ingredientCounter = 0;\n        let stepCounter = 0;\n        let preCookCounter = 0;\n\n        this.recipe.ingredients.forEach(element => {\n          const choppedElement = element.split(' | ');\n          const ingredientName = choppedElement[0];\n          const ingredientAmount = choppedElement[1];\n          // console.log('ingredients array: ' + element);\n          this.ingredients.push(this.buildIngredient());\n          this.ingredients.at(ingredientCounter).patchValue({\n            name: ingredientName,\n            amount: ingredientAmount\n          });\n          ingredientCounter++;\n        });\n\n        this.recipe.preCook.forEach(element => {\n          this.preCook.push(this.buildPreCook());\n          this.preCook.at(preCookCounter).patchValue({\n            body: element\n          });\n          preCookCounter++;\n        });\n\n        this.recipe.steps.forEach(step => {\n          // console.log('Step ' + (stepCounter + 1) + ': ' + step.name + ' - ' + step.body);\n          this.steps.push(this.buildStep());\n          this.steps.at(stepCounter).patchValue({\n            name: step.name,\n            body: step.body\n          });\n          stepCounter++;\n        });\n\n        this.imageDir = this.recipe.imgDir;\n\n        this.recipeForm.patchValue({\n          producer: this.recipe.producer,\n          title: this.recipe.title,\n          nutrition: this.recipe.nutritionValues,\n          imgDir: this.recipe.imgDir\n        });\n      // });\n    }\n\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  buildPreCook(): FormGroup {\n    return this.fb.group({\n      body: ['', Validators.required]\n    });\n  }\n\n  buildIngredient(): FormGroup {\n    return this.fb.group({\n      name: ['', Validators.required],\n      amount: ['', Validators.required]\n      // amountFor2: ['', Validators.required],\n      // amountFor4: ['', Validators.required]\n    });\n  }\n\n  buildStep(): FormGroup {\n    return this.fb.group({\n      name: ['', Validators.required],\n      body: ['', Validators.required]\n    });\n  }\n\n  addPreCook(): void {\n    this.preCook.push(this.buildPreCook());\n  }\n\n  addIngredient(): void {\n    this.ingredients.push(this.buildIngredient());\n  }\n\n  addStep(): void {\n    this.steps.push(this.buildStep());\n  }\n\n  removePreCook(id: number): void {\n    this.preCook.removeAt(id);\n  }\n\n  removeIngredient(id: number): void {\n    this.ingredients.removeAt(id);\n  }\n\n  removeStep(id: number): void {\n    this.steps.removeAt(id);\n  }\n\n  addHomeChefValidators(formControl: AbstractControl): void {\n    formControl.get('fat').setValidators([Validators.required, numberChecker()]);\n    formControl.get('fat').updateValueAndValidity();\n    formControl.get('carbohydrate').setValidators([Validators.required, numberChecker()]);\n    formControl.get('carbohydrate').updateValueAndValidity();\n    formControl.get('protein').setValidators([Validators.required, numberChecker()]);\n    formControl.get('protein').updateValueAndValidity();\n    formControl.get('sodium').setValidators([Validators.required, numberChecker()]);\n    formControl.get('sodium').updateValueAndValidity();\n  }\n\n  removeHomeChefValidators(formControl: AbstractControl): void {\n    formControl.get('fat').clearValidators();\n   // formControl.get('fat').patchValue('');\n    formControl.get('fat').updateValueAndValidity();\n    formControl.get('carbohydrate').clearValidators();\n   // formControl.get('carbohydrate').patchValue('');\n    formControl.get('carbohydrate').updateValueAndValidity();\n    formControl.get('protein').clearValidators();\n   // formControl.get('protein').patchValue('');\n    formControl.get('protein').updateValueAndValidity();\n    formControl.get('sodium').clearValidators();\n   // formControl.get('sodium').patchValue('');\n    formControl.get('sodium').updateValueAndValidity();\n  }\n\n  addHelloFreshValidators(formControl: AbstractControl): void {\n    formControl.get('sugar').setValidators([Validators.required, numberChecker()]);\n    formControl.get('sugar').updateValueAndValidity();\n    formControl.get('saturatedFat').setValidators([Validators.required, numberChecker()]);\n    formControl.get('saturatedFat').updateValueAndValidity();\n    formControl.get('cholesterol').setValidators([Validators.required, numberChecker()]);\n    formControl.get('cholesterol').updateValueAndValidity();\n    formControl.get('fiber').setValidators([Validators.required, numberChecker()]);\n    formControl.get('fiber').updateValueAndValidity();\n  }\n\n  removeHelloFreshValidators(formControl: AbstractControl): void {\n    formControl.get('sugar').clearValidators();\n   //  formControl.get('sugar').patchValue('');\n    formControl.get('sugar').updateValueAndValidity();\n    formControl.get('saturatedFat').clearValidators();\n   //  formControl.get('saturatedFat').patchValue('');\n    formControl.get('saturatedFat').updateValueAndValidity();\n    formControl.get('cholesterol').clearValidators();\n   //  formControl.get('cholesterol').patchValue('');\n    formControl.get('cholesterol').updateValueAndValidity();\n    formControl.get('fiber').clearValidators();\n   //  formControl.get('fiber').patchValue('');\n    formControl.get('fiber').updateValueAndValidity();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submitted',\n  template: `\n  <div class=\"container\" style=\"padding-bottom: 30px\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"well well-lg\">\n          <div class=\"row\">\n            <div class=\"col-sm-12 text-center\">\n            <h1>Thank you for submitting a recipe.</h1> <br>\n            <h1>An admin will review your submitted recipe shortly.</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n  </div>\n`,\n  styles: ['']\n})\nexport class SubmittedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"img {\\n  height: 100%;\\n  width: 100%;\\n  -o-object-fit: cover;\\n     object-fit: cover; }\\n\\n.ing-text {\\n  font-size: 18px; }\\n\\nsmall {\\n  font-style: italic; }\\n\\n.list-group-item:after {\\n  border: 0px !important; }\\n\\n.badge-hf {\\n  background-color: #0cd157 !important; }\\n\\n.badge-hc {\\n  background-color: #319b42 !important; }\\n\\n.fa-heart-o, .fa-heart {\\n  color: red; }\\n\\n.fa-star, .fa-star-o {\\n  color: gold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9oZGQvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcmVjaXBlLWFwcC1uZy9zcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWRldGFpbC9yZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxvQkFBaUI7S0FBakIsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUtFLHNCQUFzQixFQUFBOztBQUd4QjtFQUVFLG9DQUFvQyxFQUFBOztBQUd0QztFQUNFLG9DQUFvQyxFQUFBOztBQUd0QztFQUNFLFVBQVUsRUFBQTs7QUFHWjtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWRldGFpbC9yZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5pbmctdGV4dCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuc21hbGwge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5saXN0LWdyb3VwLWl0ZW06YWZ0ZXIge1xuICAvLyBjb250ZW50OiBcIlwiO1xuICAvLyBkaXNwbGF5OiBibG9jaztcbiAgLy8gbWFyZ2luOiAwIGF1dG87XG4gIC8vIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDBweCAhaW1wb3J0YW50O1xufVxuXG4uYmFkZ2UtaGYge1xuICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE5ZDNhICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwY2QxNTcgIWltcG9ydGFudDtcbn1cblxuLmJhZGdlLWhjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxOWI0MiAhaW1wb3J0YW50O1xufVxuXG4uZmEtaGVhcnQtbywgLmZhLWhlYXJ0IHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmZhLXN0YXIsIC5mYS1zdGFyLW8ge1xuICBjb2xvcjogZ29sZDtcbn1cbiJdfQ== */\"","import {Component, Inject, OnInit, SecurityContext} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {RecipeApiService} from 'src/app/core/services/api/recipe-api.service';\nimport {IRecipe, IRecipeResolved} from 'src/app/models/recipe.model';\nimport {SessionService} from '../../core/services/session.service';\nimport {Toastr, TOASTR_TOKEN} from 'src/app/core/services/toastr.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.scss']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n  recipe: IRecipe;\n  recipeId: number;\n  preCookTitle: string;\n  favorited: boolean;\n  rated: boolean;\n  userRating = 0;\n  avgRating = 0;\n\n  constructor(private recipeApi: RecipeApiService,\n              private route: ActivatedRoute,\n              private session: SessionService,\n              private router: Router,\n              private sanitizer: DomSanitizer,\n              @Inject(TOASTR_TOKEN) private toastr: Toastr\n              ) { }\n\n  ngOnInit() {\n    window.scroll(0, 0);\n    const resolvedData: IRecipeResolved = this.route.snapshot.data.resolvedData;\n\n    if (resolvedData.error) {\n      console.error(`Error in recipe detail comp: ${JSON.stringify(resolvedData.error)}`);\n      if (resolvedData.error.error.ErrMessage) {\n        console.log(`ErrMessage: ${resolvedData.error.error.ErrMessage}`);\n      }\n      console.log('routing to error page...');\n      this.router.navigate(['error']);\n    } else {\n      this.recipe = resolvedData.recipe;\n      this.recipeId = this.recipe._id;\n      let favoriters: string[];\n      favoriters = this.recipe.favoriters;\n      this.favorited = favoriters.indexOf('' + this.session.getUser._id) > -1;\n      if (this.recipe.producer === 'Hello Fresh') {\n        this.preCookTitle = 'Bust Out:';\n      } else if (this.recipe.producer === 'Home Chef') {\n        this.preCookTitle = 'Before You Cook:';\n      }\n\n      if (Object.keys(this.recipe.raters).length > 0) {\n        this.rated = !!this.recipe.raters[this.session.getUser._id];\n        this.userRating = this.rated ? this.recipe.raters[this.session.getUser._id] : 0;\n\n        let ratingCounter = 0;\n        for (const value of Object.values(this.recipe.raters)) {\n          this.avgRating += Number(value);\n          ratingCounter++;\n        }\n\n        this.avgRating /= ratingCounter;\n      }\n\n    }\n\n\n  }\n\n  get userIsAdmin(): boolean {\n    return this.session.isAdmin;\n  }\n\n  setRating(rating: number): void {\n    this.userRating = rating;\n  }\n\n  logRate($event) {\n    console.log($event);\n  }\n\n  submitRate() {\n    this.recipe.raters[this.session.getUser._id] = this.userRating;\n\n    this.recipeApi.rateRecipe(this.recipe).subscribe(res => {\n      this.rated = true;\n      this.toastr.success(`${this.sanitizer.sanitize(SecurityContext.HTML, this.recipe.title)} Successfully Rated!`);\n\n      // update average rating\n      let ratingCounter = 0;\n      this.avgRating = 0;\n      for (const value of Object.values(this.recipe.raters)) {\n        this.avgRating += Number(value);\n        ratingCounter++;\n      }\n      this.avgRating /= ratingCounter;\n\n    }, err => {\n      this.toastr.error(`ERROR RATING RECIPE`);\n      console.log('err in submitRate: ' + err);\n    });\n  }\n\n  favorite(): void {\n    this.favorited = !this.favorited;\n    if (this.favorited) {\n      this.recipe.favoriters.push('' + this.session.getUser._id);\n    } else {\n      this.recipe.favoriters = this.recipe.favoriters.filter(uId => uId !== '' + this.session.getUser._id);\n    }\n\n    this.recipeApi.favoriteRecipe(this.recipe).subscribe(res => {\n      // console.log('res from fav api call: ' + res);\n      if (this.favorited) {\n        this.toastr.success(`${this.sanitizer.sanitize(SecurityContext.HTML, this.recipe.title)} Has Been Favorited`);\n      } else {\n        this.toastr.success(`${this.sanitizer.sanitize(SecurityContext.HTML, this.recipe.title)} Has Been Unfavorited`);\n      }\n    });\n  }\n\n}\n\n\n\n","export default \".btn-toolbar {\\n  justify-content: center; }\\n\\n.btn-group {\\n  padding-bottom: 2px; }\\n\\nmain {\\n  background-color: #343a40; }\\n\\n.fa-star, .fa-star-o {\\n  color: gold; }\\n\\n.container {\\n  background-color: white;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9oZGQvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcmVjaXBlLWFwcC1uZy9zcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSx5QkFBeUIsRUFBQTs7QUFHM0I7RUFDRSxXQUFXLEVBQUE7O0FBUWI7RUFFRSx1QkFBdUI7RUFDdkIsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtbGlzdC9yZWNpcGUtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tdG9vbGJhciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uYnRuLWdyb3VwIHtcbiAgcGFkZGluZy1ib3R0b206IDJweDtcbn1cblxubWFpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XG59XG5cbi5mYS1zdGFyLCAuZmEtc3Rhci1vIHtcbiAgY29sb3I6IGdvbGQ7XG59XG5cbi8vLmhlYWRpbmcge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XG4gIC8vY29sb3I6IHdoaXRlO1xuLy99XG5cbi5jb250YWluZXIge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4iXX0= */\"","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, Inject, OnInit, SecurityContext} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  IRecipe,\n  IRecipesResolved,\n  IRecipeGQLResolved,\n  IRecipesGQLResolved,\n  IRecipeGQL\n} from 'src/app/models/recipe.model';\nimport {SessionService} from '../../core/services/session.service';\nimport {Toastr, TOASTR_TOKEN} from '../../core/services/toastr.service';\nimport {RecipeApiService} from '../../core/services/api/recipe-api.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.scss']\n})\nexport class RecipeListComponent implements OnInit {\n\n  recipeList: IRecipe[];\n  // recipeList: IRecipeGQL[];\n\n  // For modal purposes\n  selectedRecipe: IRecipe;\n  // selectedRecipe: IRecipeGQL;\n  rated: boolean;\n  userRating = 0;\n\n  sortFilter: string;\n  sortDirection: string;\n\n  topSelectedFilter = '';\n  botSelectedFilter = '';\n\n  userId: number;\n\n  constructor(private sessionService: SessionService,\n              private apiService: RecipeApiService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private sanitizer: DomSanitizer,\n              // private graphQLService: GraphqlService,\n              @Inject(TOASTR_TOKEN) private toastr: Toastr) { }\n\n  ngOnInit() {\n    window.scroll(0, 0);\n    // const resolvedData: IRecipesResolved = this.route.snapshot.data.resolvedData;\n    const resolvedData = this.route.snapshot.data.resolvedData as IRecipesGQLResolved;\n\n    if (resolvedData.error) {\n      console.error(`Error from resolver: ${JSON.stringify(resolvedData.error)}`);\n      this.router.navigate(['error']);\n    } else {\n      this.recipeList = [];\n      // console.log(`resolvedData: ${JSON.stringify(resolvedData.recipes)}`);\n\n      // have to loop through graphQL responses and reverse engineer maps since graphQL doesn't natively support maps\n      for (const recipe of resolvedData.recipes) {\n        let tmpRecipe: IRecipe;\n        const tmpMap = new Map<number, number>();\n\n        let counter = 0;\n        for (const key of recipe.raters.keys) {\n          tmpMap[key] = recipe.raters.values[counter];\n          counter++;\n        }\n\n        tmpRecipe = {\n          _id: recipe._id,\n          title: recipe.title,\n          producer: recipe.producer,\n          nutritionValues: {\n            calories: recipe.nutritionValues.calories\n          },\n          favoriters: recipe.favoriters,\n          raters: tmpMap,\n          imgDir: recipe.imgDir\n        };\n        this.recipeList.push(tmpRecipe);\n      }\n      // this.recipeList = resolvedData.recipes;\n      this.userId = this.sessionService.getUser._id;\n\n      // just temporarily assign it to 1st recipe to avoid errors\n      this.selectedRecipe = this.recipeList[0];\n    }\n\n  }\n\n  setSortFilter(input: string): void {\n    if (this.sortFilter === input) {\n\n      if (this.sortDirection === 'down') {\n        this.sortFilter = this.sortDirection = '';\n      } else {\n        this.sortDirection = 'down';\n      }\n\n    } else {\n      this.sortFilter = input;\n      this.sortDirection = 'up';\n    }\n\n  }\n\n  setBotFilter(input: string): void {\n    this.botSelectedFilter = this.botSelectedFilter === input ? '' : input;\n  }\n\n  setTopFilter(input: string): void {\n    this.topSelectedFilter = this.topSelectedFilter === input ? '' : input;\n  }\n\n  // test after implementing GraphQL\n  favEvent($event): void {\n    const recipeToFav = $event.recipe as IRecipe;\n    const favoriting = $event.favoriting as boolean;\n\n    this.apiService.favoriteRecipe(recipeToFav).subscribe((res) => {\n      if (favoriting) {\n        const message = `${recipeToFav.title} Has Been Favorited!`;\n        this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, message));\n      } else {\n        const message = `${recipeToFav.title} Has Been Unfavorited!`;\n        this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, message));\n      }\n      this.recipeList = this.recipeList.slice(0); // re-trigger pipes\n    }, (err) => {\n      console.error(`err: ${err}`);\n      this.toastr.error('Error favoriting recipe');\n    });\n\n  }\n\n  // test all below after implementing GraphQL\n  triggerRate($event): void {\n    this.selectedRecipe = $event as IRecipe;\n    this.rated = !!this.selectedRecipe.raters[this.userId];\n    this.userRating = this.rated ? this.selectedRecipe.raters[this.userId] : 0;\n  }\n\n  setRating(rating: number): void {\n    this.userRating = rating;\n  }\n\n  submitRate(): void {\n    this.selectedRecipe.raters[this.userId] = this.userRating;\n    this.apiService.rateRecipe(this.selectedRecipe).subscribe((res) => {\n      console.log(`res: ${res}`);\n      const idx = this.recipeList.indexOf(this.selectedRecipe);\n      this.recipeList[idx].raters[this.userId] = this.userRating;\n      this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, `${this.selectedRecipe.title} has been successfully rated`));\n    }, (err) => {\n      console.log(`err: ${err}`);\n      this.toastr.error('Error rating recipe');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { RecipeResolverService } from '../core/resolvers/recipe-resolver.service';\nimport { SubmittedComponent } from './edit-recipe/submitted.component';\nimport { RecipeSearchComponent } from './recipe-search/recipe-search.component';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { EditRecipeComponent } from './edit-recipe/edit-recipe.component';\nimport { RouteGuard } from '../core/guards/route.guard';\nimport { RecipeComponent } from './recipe/recipe.component';\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: RecipeListComponent,\n    resolve: { resolvedData: RecipeResolverService },\n    data: { multipleRecipes: true, context: 'list' }\n  },\n  {\n    path: 'submitted',\n    component: SubmittedComponent\n  },\n  {\n    path: 'search',\n    component: RecipeSearchComponent,\n    resolve: { resolvedData: RecipeResolverService },\n    data: { multipleRecipes: true, context: 'list' }\n  },\n  {\n    path: ':id',\n    component: RecipeDetailComponent,\n    resolve: { resolvedData: RecipeResolverService},\n    data: { multipleRecipes: false }\n  },\n  {\n    path: ':id/edit',\n    component: EditRecipeComponent,\n    canDeactivate: [RouteGuard],\n    resolve: { resolvedData: RecipeResolverService },\n    data: { context: 'editRecipe', multipleRecipes: false }\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'list'\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class RecipeRoutingModule {\n  static components = [\n    RecipeComponent,\n    RecipeDetailComponent,\n    RecipeListComponent,\n    EditRecipeComponent,\n    RecipeSearchComponent,\n    SubmittedComponent\n  ];\n}\n","export default \"main {\\n  background-color: #343a40; }\\n\\n.container {\\n  background-color: white;\\n  height: 100%; }\\n\\n.fa-star, .fa-star-o {\\n  color: gold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9oZGQvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcmVjaXBlLWFwcC1uZy9zcmMvYXBwL3JlY2lwZXMvcmVjaXBlLXNlYXJjaC9yZWNpcGUtc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBRUUsdUJBQXVCO0VBQ3ZCLFlBQVksRUFBQTs7QUFHZDtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLXNlYXJjaC9yZWNpcGUtc2VhcmNoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XG59XG5cbi5jb250YWluZXIge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mYS1zdGFyLCAuZmEtc3Rhci1vIHtcbiAgY29sb3I6IGdvbGQ7XG59XG4iXX0= */\"","import {Component, OnInit, OnDestroy, Inject, SecurityContext} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\n\nimport { IRecipe, IRecipesGQLResolved } from 'src/app/models/recipe.model';\nimport { Toastr, TOASTR_TOKEN } from 'src/app/core/services/toastr.service';\nimport { SessionService } from 'src/app/core/services/session.service';\nimport { LoggerService } from '../../core/services/logger.service';\nimport { RecipeApiService } from '../../core/services/api/recipe-api.service';\n\n@Component({\n  selector: 'app-recipe-search',\n  templateUrl: './recipe-search.component.html',\n  styleUrls: ['./recipe-search.component.scss']\n})\nexport class RecipeSearchComponent implements OnInit, OnDestroy {\n\n  searchString: string;\n  private sub: Subscription;\n\n  recipeList: IRecipe[];\n  filteredList: IRecipe[];\n\n  userId: number;\n\n  // For modal purposes\n  selectedRecipe: IRecipe;\n  rated: boolean;\n  userRating = 0;\n\n  constructor(private route: ActivatedRoute,\n              private sessionService: SessionService,\n              private loggerService: LoggerService,\n              private router: Router,\n              private sanitizer: DomSanitizer,\n              private apiService: RecipeApiService,\n              @Inject(TOASTR_TOKEN) private toastr: Toastr) { }\n\n\n  ngOnInit() {\n    window.scroll(0, 0);\n    // const resolvedData: IRecipesResolved = this.route.snapshot.data.resolvedData;\n    const resolvedData = this.route.snapshot.data.resolvedData as IRecipesGQLResolved;\n\n    if (resolvedData.error) {\n      console.error(`Error in edit recipe ${resolvedData.error}`);\n      this.toastr.error(`Error fetching recipes: ${resolvedData.error}`);\n      this.router.navigate(['error']);\n    } else {\n      this.recipeList = [];\n      // console.log(`resolvedData: ${JSON.stringify(resolvedData.recipes)}`);\n\n      // have to loop through graphQL responses and reverse engineer maps since graphQL doesn't natively support maps\n      for (const recipe of resolvedData.recipes) {\n        let tmpRecipe: IRecipe;\n        const tmpMap = new Map<number, number>();\n\n        let counter = 0;\n        for (const key of recipe.raters.keys) {\n          tmpMap[key] = recipe.raters.values[counter];\n          counter++;\n        }\n\n        tmpRecipe = {\n          _id: recipe._id,\n          title: recipe.title,\n          producer: recipe.producer,\n          nutritionValues: {\n            calories: recipe.nutritionValues.calories\n          },\n          favoriters: recipe.favoriters,\n          raters: tmpMap,\n          imgDir: recipe.imgDir\n        };\n        this.recipeList.push(tmpRecipe);\n      }\n      // this.recipeList = resolvedData.recipes;\n      this.userId = this.sessionService.getUser._id;\n\n      // just temporarily assign it to 1st recipe to avoid errors\n      this.selectedRecipe = this.recipeList[0];\n\n    }\n\n    this.userId = this.sessionService.getUser._id;\n    this.sub = this.route.queryParamMap.subscribe(params => {\n      this.loggerService.consoleLog(`Param changed to: ${params.get('searchString')}`);\n      this.searchString = params.get('searchString');\n      this.filterRecipes();\n    });\n    // just temporarily assign a value to avoid errors\n    this.selectedRecipe = this.recipeList[0];\n\n  }\n\n  filterRecipes(): void {\n    this.filteredList = this.recipeList\n      .filter(x => x.title.toLocaleLowerCase().includes(this.searchString.toLocaleLowerCase()));\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  favEvent($event): void {\n    const recipeToFav = $event.recipe as IRecipe;\n    const favoriting = $event.favoriting as boolean;\n\n    this.apiService.favoriteRecipe(recipeToFav).subscribe((res) => {\n      if (favoriting) {\n        const message = `${recipeToFav.title} Has Been Favorited!`;\n        this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, message));\n      } else {\n        const message = `${recipeToFav.title} Has Been Unfavorited!`;\n        this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, message));\n      }\n      this.recipeList = this.recipeList.slice(0); // re-trigger pipes\n    }, (err) => {\n      console.error(`err: ${err}`);\n      this.toastr.error('Error favoriting recipe');\n    });\n  }\n\n  triggerRate($event): void {\n    this.selectedRecipe = $event as IRecipe;\n    this.rated = !!this.selectedRecipe.raters[this.userId];\n    this.userRating = this.rated ? this.selectedRecipe.raters[this.userId] : 0;\n  }\n\n  setRating(rating: number): void {\n    this.userRating = rating;\n  }\n\n  submitRate(): void {\n    this.selectedRecipe.raters[this.userId] = this.userRating;\n    this.apiService.rateRecipe(this.selectedRecipe).subscribe((res) => {\n      console.log(`res: ${res}`);\n      const idx = this.recipeList.indexOf(this.selectedRecipe);\n      this.recipeList[idx].raters[this.userId] = this.userRating;\n      this.toastr.success(this.sanitizer.sanitize(SecurityContext.HTML, `${this.selectedRecipe.title} has been successfully rated`));\n    }, (err) => {\n      console.log(`err: ${err}`);\n      this.toastr.error('Error rating recipe');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RecipeRoutingModule } from './recipe-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    RecipeRoutingModule,\n    ReactiveFormsModule,\n    CommonModule,\n    SharedModule\n  ],\n  declarations: [\n    RecipeRoutingModule.components\n  ],\n  providers: []\n})\nexport class RecipeModule { }\n","export default \".card-img-top {\\n  width: 100%;\\n  height: 233px;\\n  -o-object-fit: cover;\\n     object-fit: cover; }\\n\\n.card {\\n  background-color: #343a40;\\n  height: 100%; }\\n\\n.img-thumbnail {\\n  border: 1px solid #343a40; }\\n\\n.favoritingIcon {\\n  padding-left: 25px;\\n  padding-top: 7px; }\\n\\n.badge-hf {\\n  background-color: #0cd157 !important; }\\n\\n.badge-hc {\\n  background-color: #319b42 !important; }\\n\\n.fa-heart-o, .fa-heart {\\n  color: red; }\\n\\n.fa-star, .fa-star-o {\\n  color: gold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9oZGQvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcmVjaXBlLWFwcC1uZy9zcmMvYXBwL3JlY2lwZXMvcmVjaXBlL3JlY2lwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isb0JBQWlCO0tBQWpCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZLEVBQUE7O0FBR2Q7RUFDRSx5QkFBeUIsRUFBQTs7QUFHM0I7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBRUUsb0NBQW9DLEVBQUE7O0FBR3RDO0VBQ0Usb0NBQW9DLEVBQUE7O0FBR3RDO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUvcmVjaXBlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaW1nLXRvcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDIzM3B4O1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5pbWctdGh1bWJuYWlsIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzM0M2E0MDtcbn1cblxuLmZhdm9yaXRpbmdJY29uIHtcbiAgcGFkZGluZy1sZWZ0OiAyNXB4O1xuICBwYWRkaW5nLXRvcDogN3B4O1xufVxuXG4uYmFkZ2UtaGYge1xuICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE5ZDNhICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwY2QxNTcgIWltcG9ydGFudDtcbn1cblxuLmJhZGdlLWhjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxOWI0MiAhaW1wb3J0YW50O1xufVxuXG4uZmEtaGVhcnQtbywgLmZhLWhlYXJ0IHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmZhLXN0YXIsIC5mYS1zdGFyLW8ge1xuICBjb2xvcjogZ29sZDtcbn1cblxuLy8gLnJhdGluZyB7XG4gIC8vIHVuaWNvZGUtYmlkaTogYmlkaS1vdmVycmlkZTtcbiAgLy8gZGlyZWN0aW9uOiBydGw7XG4gIC8vIHRleHQtYWxpZ246IGNlbnRlcjtcbi8vIH1cbi8vIC5yYXRpbmcgPiBzcGFuIHtcbiAgLy8gZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvLyBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC8vIHdpZHRoOiAxLjFlbTtcbi8vIH1cbi8vIC5yYXRpbmcgPiBzcGFuOmhvdmVyOmJlZm9yZSxcbi8vIC5yYXRpbmcgPiBzcGFuOmhvdmVyIH4gc3BhbjpiZWZvcmUge1xuICAgLy8gY29udGVudDogXCJcXDI2MDVcIjtcbiAgIC8vIGNvbG9yOiBnb2xkO1xuICAgLy8gcG9zaXRpb246IGFic29sdXRlO1xuLy8gfVxuXG4vLyAuaW5SYXRpbmcge1xuICAvLyBjb250ZW50OiBcIlxcMjYwNVwiO1xuICAvLyBsZWZ0OiAwO1xuICAvLyAvL2NvbG9yOiBnb2xkO1xuICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLyB9XG4iXX0= */\"","import {\n  Component,\n  OnInit,\n  Input,\n  Inject,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { JQ_TOKEN } from '../../core/services/jQuery.service';\nimport { IRecipe } from 'src/app/models/recipe.model';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.scss']\n})\nexport class RecipeComponent implements OnInit {\n  private _userRating = 0;\n  rated = false;\n\n  @Input()\n  recipe: IRecipe;\n  @Input()\n  userId: number;\n  @Input()\n  set userRating(rating: number) {\n    this._userRating = !!rating ? rating : 0;\n    this.rated = this._userRating > 0;\n\n    // compute/update average rating\n    if (Object.keys(this.recipe.raters).length > 0) {\n      let ratingCounter = 0;\n      this.avgRating = 0;\n      for (const value of Object.values(this.recipe.raters)) {\n        this.avgRating += Number(value);\n        ratingCounter++;\n      }\n      this.avgRating /= ratingCounter;\n    }\n\n    // console.log(`(2) user rating for ${this.recipe.title} is ${this._userRating}`);\n    // this._userRating = rating;\n  }\n  get userRating(): number {\n    return this._userRating;\n  }\n  @Output()\n  favoriteEvent = new EventEmitter();\n  @Output()\n  rateEvent = new EventEmitter();\n\n  favorited = false;\n  avgRating = 0;\n\n  // modalContentID: string;\n\n  constructor(\n    // @Inject(JQ_TOKEN) private $: any\n  ) { }\n\n  ngOnInit() {\n    let favoritersList: string[];\n    favoritersList = this.recipe.favoriters;\n    this.favorited = favoritersList.indexOf('' + this.userId) > -1;\n    // this.modalContentID = this.makeModalId(20);\n    // console.log('MODAL CONTENT ID: ' + this.modalContentID);\n\n    // if (Object.keys(this.recipe.raters).length > 0) {\n    //\n    //   if (this.recipe.raters[this.userId]) {\n    //     this.rated = true;\n    //     this.userRating = this.recipe.raters[this.userId];\n    //   }\n    //\n    //   let ratingCounter = 0;\n    //   for (const value of Object.values(this.recipe.raters)) {\n    //     this.avgRating += Number(value);\n    //     ratingCounter++;\n    //   }\n    //\n    //   this.avgRating /= ratingCounter;\n    //\n    // }\n\n  }\n\n  makeModalId(length: number): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n  // ngAfterViewInit() {\n    // const modalButton = '#' + this.recipe._id;\n    // const thisModalContentId = '#' + this.modalContentID;\n    // this.$(modalButton).attr({'data-target': thisModalContentId});\n  // }\n\n  // setRating(rating: number): void {\n  //   this.userRating = rating;\n  // }\n\n  triggerRate(): void {\n    this.rateEvent.emit(this.recipe);\n  }\n\n  favorite(): void {\n    this.favorited = !this.favorited;\n\n    if (this.favorited) {\n      this.recipe.favoriters.push('' + this.userId);\n    } else {\n      this.recipe.favoriters = this.recipe.favoriters.filter(uId => uId !== '' + this.userId);\n    }\n\n    this.favoriteEvent.emit({recipe: this.recipe, favoriting: this.favorited});\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}