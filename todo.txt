- possibly learn how to configure passport to work w/ CORS apps
- upgrade to angular 8 & test using Ivy

- implement password resets (for users & admin)
- service/page for users to see their ratings and change them
- non-authenticated gallery page
- a 'learn more' page
- make account related services into separate dropdown on the right
- implement backgrounds on pages (at least outside of containers)
- implement pagination for recipe search page and possibly recipe list page
- implement route animations
- make it so when you navigate to recipe detail page you're at the top of the page (all the way scrolled up)
- consider implementing sort & filter functionality to search page and make a pipe for filter and sorting for both recipe list + search page
^ -> (possibly move filtering + sorting to external pipe)
- removing routing to error component once I'm confident that most errors have been handled and routed to in code sufficiently
- make sure all components grabbing data from resolvers route to error page on error existence
^ -> possibly handle rerouting to error page in interceptor or resolvers
- modularize the code in middlewares that checks for header + tokens

******************************************************************************
- move WebClient directory out of node directory for cloud node deployments
******************************************************************************

- commenting functionality on recipes?
- possibly split route-guard into two guards to simplify logic (maybe)
- update app to store + display ingredient amounts for both 2 & 4 serving sizes (maaaybe, actually only hello fresh gives amounts for 4 servings)

node packages to checkout from security course:
- express-validator (possibly look for angular equal)
